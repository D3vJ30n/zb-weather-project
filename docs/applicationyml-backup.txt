# 프로젝트 환경 설정

spring:
  profiles:
    active: prod  # 기본 프로파일 설정: H2, MySQL 실행 시 prod 프로파일로 변경
  data:
    redis:
      host: localhost
      port: 6379
  task:
    scheduling:
      pool:
        size: 10

# H2 프로파일 설정
---
spring:
  config:
    activate:
      on-profile: h2
  datasource:
    url: jdbc:h2:mem:test
    username: sa
    password:
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create-drop
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  # Redis 설정 추가
  data:
    redis:
      host: localhost
      port: 6379

# 테스트 프로파일 설정 (임베디드 Redis 및 H2 데이터베이스)
---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  data:
    redis:
      host: localhost
      port: 6379


# OpenWeatherMap API 설정
openweather:
  api-key: ${OPENWEATHER_API_KEY:5d434267d672e84f5d7a7b1c4a9d6b11} # 환경 변수를 사용하며 기본값도 제공
  base-url: https://api.openweathermap.org/data/2.5

# MySQL 프로파일 설정
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://192.168.219.101:3306/zb-weather?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: 6188
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    root: INFO
    com.example.demo: DEBUG


